{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled3.ipynb",
      "provenance": [],
      "collapsed_sections": [],
      "authorship_tag": "ABX9TyMCGO8YbX3Q3mP3nrPrKpSd",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/StrugglingProgrammer44/Programming-1/blob/main/HW%205\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#**HW # 5**"
      ],
      "metadata": {
        "id": "oi4QpsK_mrQL"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "age = input(\"Please give a number for your age\\t\")\n",
        "while not(age.isdigit()):\n",
        "  age = input(\"Please give a number for your age\\t\")\n",
        "\n",
        "age = int(age)\n",
        "chances = 3\n",
        "if(age > 1,age < 100):\n",
        "  print(\"Acceptable\")\n",
        "if not(age > 1,age < 100):\n",
        "  print(\"Unacceptable\")\n",
        "\n",
        "name = input(\"Please give me your name\\t\")\n",
        "while not(name.isalpha()):\n",
        "  name = input(\"Please give me your name\\t\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "20y_CBLvrCna",
        "outputId": "9f5b91a6-c0b3-4644-c08b-ca791a4c118a"
      },
      "execution_count": null,
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Please give a number for your age\t5\n",
            "Acceptable\n",
            "Please give me your name\tJon\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "x = 831\n",
        "total = 0\n",
        "hasThree = False\n",
        "holder = x\n",
        "\n",
        "while(holder > 0):\n",
        "  if(holder%10 == 3):\n",
        "    hasThree = True\n",
        "    break\n",
        "  holder = holder // 10\n",
        "\n",
        "while(hasThree and x > 0):\n",
        "  total += x%10\n",
        "  x = x//10\n",
        "\n",
        "print(total)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "qchkU1OfwBwA",
        "outputId": "f246e132-5202-4270-99e4-1d488f493a2c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "12\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "for x in range(1,1001):\n",
        "  hasThree = False\n",
        "  holder = x\n",
        "\n",
        "  while(holder > 0):\n",
        "    if(holder%10 == 3):\n",
        "      hasThree = True\n",
        "      break\n",
        "    holder = holder // 10\n",
        "\n",
        "  if(hasThree):\n",
        "    print(x,end=\" \")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "9280eaee-7b89-4403-cedc-8d32b6fa7e11",
        "id": "VEYZvVUwybC-"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "3 13 23 30 31 32 33 34 35 36 37 38 39 43 53 63 73 83 93 103 113 123 130 131 132 133 134 135 136 137 138 139 143 153 163 173 183 193 203 213 223 230 231 232 233 234 235 236 237 238 239 243 253 263 273 283 293 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 403 413 423 430 431 432 433 434 435 436 437 438 439 443 453 463 473 483 493 503 513 523 530 531 532 533 534 535 536 537 538 539 543 553 563 573 583 593 603 613 623 630 631 632 633 634 635 636 637 638 639 643 653 663 673 683 693 703 713 723 730 731 732 733 734 735 736 737 738 739 743 753 763 773 783 793 803 813 823 830 831 832 833 834 835 836 837 838 839 843 853 863 873 883 893 903 913 923 930 931 932 933 934 935 936 937 938 939 943 953 963 973 983 993 "
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "for i in range(1,100001):\n",
        "  total = 0\n",
        "  holder = x\n",
        "\n",
        "\n",
        "  while(holder > 0):\n",
        "    total += holder%10\n",
        "    holder = holder//10\n",
        "\n",
        "    if(total == 17):\n",
        "      print(i, ends=\" \")"
      ],
      "metadata": {
        "id": "wzW8zyZezVLe"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Between 1 and 10,000 who add to 23 and have a 3\n",
        "for i in range(1,100001):\n",
        "  total = 0\n",
        "  hasThree = False\n",
        "  x = holder = i\n",
        "\n",
        "  while(holder > 0):\n",
        "    if(holder%10 == 3):\n",
        "      hasThree = True\n",
        "      break\n",
        "    holder = holder // 10\n",
        "\n",
        "  while(hasThree and x > 0):\n",
        "    total += x%10\n",
        "    x = x//10\n",
        "\n",
        "  if(total ==23):\n",
        "   print(i, end=\" \")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "6a193ba3-412d-41f5-9305-dc94e35fa991",
        "id": "-4vLfJM40_rR"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "2399 2939 2993 3299 3389 3398 3479 3488 3497 3569 3578 3587 3596 3659 3668 3677 3686 3695 3749 3758 3767 3776 3785 3794 3839 3848 3857 3866 3875 3884 3893 3929 3938 3947 3956 3965 3974 3983 3992 4379 4388 4397 4739 4793 4838 4883 4937 4973 5369 5378 5387 5396 5639 5693 5738 5783 5837 5873 5936 5963 6359 6368 6377 6386 6395 6539 6593 6638 6683 6737 6773 6836 6863 6935 6953 7349 7358 7367 7376 7385 7394 7439 7493 7538 7583 7637 7673 7736 7763 7835 7853 7934 7943 8339 8348 8357 8366 8375 8384 8393 8438 8483 8537 8573 8636 8663 8735 8753 8834 8843 8933 9239 9293 9329 9338 9347 9356 9365 9374 9383 9392 9437 9473 9536 9563 9635 9653 9734 9743 9833 9923 9932 11399 11939 11993 12389 12398 12839 12893 12938 12983 13199 13289 13298 13379 13388 13397 13469 13478 13487 13496 13559 13568 13577 13586 13595 13649 13658 13667 13676 13685 13694 13739 13748 13757 13766 13775 13784 13793 13829 13838 13847 13856 13865 13874 13883 13892 13919 13928 13937 13946 13955 13964 13973 13982 13991 14369 14378 14387 14396 14639 14693 14738 14783 14837 14873 14936 14963 15359 15368 15377 15386 15395 15539 15593 15638 15683 15737 15773 15836 15863 15935 15953 16349 16358 16367 16376 16385 16394 16439 16493 16538 16583 16637 16673 16736 16763 16835 16853 16934 16943 17339 17348 17357 17366 17375 17384 17393 17438 17483 17537 17573 17636 17663 17735 17753 17834 17843 17933 18239 18293 18329 18338 18347 18356 18365 18374 18383 18392 18437 18473 18536 18563 18635 18653 18734 18743 18833 18923 18932 19139 19193 19238 19283 19319 19328 19337 19346 19355 19364 19373 19382 19391 19436 19463 19535 19553 19634 19643 19733 19823 19832 19913 19931 20399 20939 20993 21389 21398 21839 21893 21938 21983 22379 22388 22397 22739 22793 22838 22883 22937 22973 23099 23189 23198 23279 23288 23297 23369 23378 23387 23396 23459 23468 23477 23486 23495 23549 23558 23567 23576 23585 23594 23639 23648 23657 23666 23675 23684 23693 23729 23738 23747 23756 23765 23774 23783 23792 23819 23828 23837 23846 23855 23864 23873 23882 23891 23909 23918 23927 23936 23945 23954 23963 23972 23981 23990 24359 24368 24377 24386 24395 24539 24593 24638 24683 24737 24773 24836 24863 24935 24953 25349 25358 25367 25376 25385 25394 25439 25493 25538 25583 25637 25673 25736 25763 25835 25853 25934 25943 26339 26348 26357 26366 26375 26384 26393 26438 26483 26537 26573 26636 26663 26735 26753 26834 26843 26933 27239 27293 27329 27338 27347 27356 27365 27374 27383 27392 27437 27473 27536 27563 27635 27653 27734 27743 27833 27923 27932 28139 28193 28238 28283 28319 28328 28337 28346 28355 28364 28373 28382 28391 28436 28463 28535 28553 28634 28643 28733 28823 28832 28913 28931 29039 29093 29138 29183 29237 29273 29309 29318 29327 29336 29345 29354 29363 29372 29381 29390 29435 29453 29534 29543 29633 29723 29732 29813 29831 29903 29930 30299 30389 30398 30479 30488 30497 30569 30578 30587 30596 30659 30668 30677 30686 30695 30749 30758 30767 30776 30785 30794 30839 30848 30857 30866 30875 30884 30893 30929 30938 30947 30956 30965 30974 30983 30992 31199 31289 31298 31379 31388 31397 31469 31478 31487 31496 31559 31568 31577 31586 31595 31649 31658 31667 31676 31685 31694 31739 31748 31757 31766 31775 31784 31793 31829 31838 31847 31856 31865 31874 31883 31892 31919 31928 31937 31946 31955 31964 31973 31982 31991 32099 32189 32198 32279 32288 32297 32369 32378 32387 32396 32459 32468 32477 32486 32495 32549 32558 32567 32576 32585 32594 32639 32648 32657 32666 32675 32684 32693 32729 32738 32747 32756 32765 32774 32783 32792 32819 32828 32837 32846 32855 32864 32873 32882 32891 32909 32918 32927 32936 32945 32954 32963 32972 32981 32990 33089 33098 33179 33188 33197 33269 33278 33287 33296 33359 33368 33377 33386 33395 33449 33458 33467 33476 33485 33494 33539 33548 33557 33566 33575 33584 33593 33629 33638 33647 33656 33665 33674 33683 33692 33719 33728 33737 33746 33755 33764 33773 33782 33791 33809 33818 33827 33836 33845 33854 33863 33872 33881 33890 33908 33917 33926 33935 33944 33953 33962 33971 33980 34079 34088 34097 34169 34178 34187 34196 34259 34268 34277 34286 34295 34349 34358 34367 34376 34385 34394 34439 34448 34457 34466 34475 34484 34493 34529 34538 34547 34556 34565 34574 34583 34592 34619 34628 34637 34646 34655 34664 34673 34682 34691 34709 34718 34727 34736 34745 34754 34763 34772 34781 34790 34808 34817 34826 34835 34844 34853 34862 34871 34880 34907 34916 34925 34934 34943 34952 34961 34970 35069 35078 35087 35096 35159 35168 35177 35186 35195 35249 35258 35267 35276 35285 35294 35339 35348 35357 35366 35375 35384 35393 35429 35438 35447 35456 35465 35474 35483 35492 35519 35528 35537 35546 35555 35564 35573 35582 35591 35609 35618 35627 35636 35645 35654 35663 35672 35681 35690 35708 35717 35726 35735 35744 35753 35762 35771 35780 35807 35816 35825 35834 35843 35852 35861 35870 35906 35915 35924 35933 35942 35951 35960 36059 36068 36077 36086 36095 36149 36158 36167 36176 36185 36194 36239 36248 36257 36266 36275 36284 36293 36329 36338 36347 36356 36365 36374 36383 36392 36419 36428 36437 36446 36455 36464 36473 36482 36491 36509 36518 36527 36536 36545 36554 36563 36572 36581 36590 36608 36617 36626 36635 36644 36653 36662 36671 36680 36707 36716 36725 36734 36743 36752 36761 36770 36806 36815 36824 36833 36842 36851 36860 36905 36914 36923 36932 36941 36950 37049 37058 37067 37076 37085 37094 37139 37148 37157 37166 37175 37184 37193 37229 37238 37247 37256 37265 37274 37283 37292 37319 37328 37337 37346 37355 37364 37373 37382 37391 37409 37418 37427 37436 37445 37454 37463 37472 37481 37490 37508 37517 37526 37535 37544 37553 37562 37571 37580 37607 37616 37625 37634 37643 37652 37661 37670 37706 37715 37724 37733 37742 37751 37760 37805 37814 37823 37832 37841 37850 37904 37913 37922 37931 37940 38039 38048 38057 38066 38075 38084 38093 38129 38138 38147 38156 38165 38174 38183 38192 38219 38228 38237 38246 38255 38264 38273 38282 38291 38309 38318 38327 38336 38345 38354 38363 38372 38381 38390 38408 38417 38426 38435 38444 38453 38462 38471 38480 38507 38516 38525 38534 38543 38552 38561 38570 38606 38615 38624 38633 38642 38651 38660 38705 38714 38723 38732 38741 38750 38804 38813 38822 38831 38840 38903 38912 38921 38930 39029 39038 39047 39056 39065 39074 39083 39092 39119 39128 39137 39146 39155 39164 39173 39182 39191 39209 39218 39227 39236 39245 39254 39263 39272 39281 39290 39308 39317 39326 39335 39344 39353 39362 39371 39380 39407 39416 39425 39434 39443 39452 39461 39470 39506 39515 39524 39533 39542 39551 39560 39605 39614 39623 39632 39641 39650 39704 39713 39722 39731 39740 39803 39812 39821 39830 39902 39911 39920 40379 40388 40397 40739 40793 40838 40883 40937 40973 41369 41378 41387 41396 41639 41693 41738 41783 41837 41873 41936 41963 42359 42368 42377 42386 42395 42539 42593 42638 42683 42737 42773 42836 42863 42935 42953 43079 43088 43097 43169 43178 43187 43196 43259 43268 43277 43286 43295 43349 43358 43367 43376 43385 43394 43439 43448 43457 43466 43475 43484 43493 43529 43538 43547 43556 43565 43574 43583 43592 43619 43628 43637 43646 43655 43664 43673 43682 43691 43709 43718 43727 43736 43745 43754 43763 43772 43781 43790 43808 43817 43826 43835 43844 43853 43862 43871 43880 43907 43916 43925 43934 43943 43952 43961 43970 44339 44348 44357 44366 44375 44384 44393 44438 44483 44537 44573 44636 44663 44735 44753 44834 44843 44933 45239 45293 45329 45338 45347 45356 45365 45374 45383 45392 45437 45473 45536 45563 45635 45653 45734 45743 45833 45923 45932 46139 46193 46238 46283 46319 46328 46337 46346 46355 46364 46373 46382 46391 46436 46463 46535 46553 46634 46643 46733 46823 46832 46913 46931 47039 47093 47138 47183 47237 47273 47309 47318 47327 47336 47345 47354 47363 47372 47381 47390 47435 47453 47534 47543 47633 47723 47732 47813 47831 47903 47930 48038 48083 48137 48173 48236 48263 48308 48317 48326 48335 48344 48353 48362 48371 48380 48434 48443 48533 48623 48632 48713 48731 48803 48830 49037 49073 49136 49163 49235 49253 49307 49316 49325 49334 49343 49352 49361 49370 49433 49523 49532 49613 49631 49703 49730 50369 50378 50387 50396 50639 50693 50738 50783 50837 50873 50936 50963 51359 51368 51377 51386 51395 51539 51593 51638 51683 51737 51773 51836 51863 51935 51953 52349 52358 52367 52376 52385 52394 52439 52493 52538 52583 52637 52673 52736 52763 52835 52853 52934 52943 53069 53078 53087 53096 53159 53168 53177 53186 53195 53249 53258 53267 53276 53285 53294 53339 53348 53357 53366 53375 53384 53393 53429 53438 53447 53456 53465 53474 53483 53492 53519 53528 53537 53546 53555 53564 53573 53582 53591 53609 53618 53627 53636 53645 53654 53663 53672 53681 53690 53708 53717 53726 53735 53744 53753 53762 53771 53780 53807 53816 53825 53834 53843 53852 53861 53870 53906 53915 53924 53933 53942 53951 53960 54239 54293 54329 54338 54347 54356 54365 54374 54383 54392 54437 54473 54536 54563 54635 54653 54734 54743 54833 54923 54932 55139 55193 55238 55283 55319 55328 55337 55346 55355 55364 55373 55382 55391 55436 55463 55535 55553 55634 55643 55733 55823 55832 55913 55931 56039 56093 56138 56183 56237 56273 56309 56318 56327 56336 56345 56354 56363 56372 56381 56390 56435 56453 56534 56543 56633 56723 56732 56813 56831 56903 56930 57038 57083 57137 57173 57236 57263 57308 57317 57326 57335 57344 57353 57362 57371 57380 57434 57443 57533 57623 57632 57713 57731 57803 57830 58037 58073 58136 58163 58235 58253 58307 58316 58325 58334 58343 58352 58361 58370 58433 58523 58532 58613 58631 58703 58730 59036 59063 59135 59153 59234 59243 59306 59315 59324 59333 59342 59351 59360 59423 59432 59513 59531 59603 59630 60359 60368 60377 60386 60395 60539 60593 60638 60683 60737 60773 60836 60863 60935 60953 61349 61358 61367 61376 61385 61394 61439 61493 61538 61583 61637 61673 61736 61763 61835 61853 61934 61943 62339 62348 62357 62366 62375 62384 62393 62438 62483 62537 62573 62636 62663 62735 62753 62834 62843 62933 63059 63068 63077 63086 63095 63149 63158 63167 63176 63185 63194 63239 63248 63257 63266 63275 63284 63293 63329 63338 63347 63356 63365 63374 63383 63392 63419 63428 63437 63446 63455 63464 63473 63482 63491 63509 63518 63527 63536 63545 63554 63563 63572 63581 63590 63608 63617 63626 63635 63644 63653 63662 63671 63680 63707 63716 63725 63734 63743 63752 63761 63770 63806 63815 63824 63833 63842 63851 63860 63905 63914 63923 63932 63941 63950 64139 64193 64238 64283 64319 64328 64337 64346 64355 64364 64373 64382 64391 64436 64463 64535 64553 64634 64643 64733 64823 64832 64913 64931 65039 65093 65138 65183 65237 65273 65309 65318 65327 65336 65345 65354 65363 65372 65381 65390 65435 65453 65534 65543 65633 65723 65732 65813 65831 65903 65930 66038 66083 66137 66173 66236 66263 66308 66317 66326 66335 66344 66353 66362 66371 66380 66434 66443 66533 66623 66632 66713 66731 66803 66830 67037 67073 67136 67163 67235 67253 67307 67316 67325 67334 67343 67352 67361 67370 67433 67523 67532 67613 67631 67703 67730 68036 68063 68135 68153 68234 68243 68306 68315 68324 68333 68342 68351 68360 68423 68432 68513 68531 68603 68630 69035 69053 69134 69143 69233 69305 69314 69323 69332 69341 69350 69413 69431 69503 69530 70349 70358 70367 70376 70385 70394 70439 70493 70538 70583 70637 70673 70736 70763 70835 70853 70934 70943 71339 71348 71357 71366 71375 71384 71393 71438 71483 71537 71573 71636 71663 71735 71753 71834 71843 71933 72239 72293 72329 72338 72347 72356 72365 72374 72383 72392 72437 72473 72536 72563 72635 72653 72734 72743 72833 72923 72932 73049 73058 73067 73076 73085 73094 73139 73148 73157 73166 73175 73184 73193 73229 73238 73247 73256 73265 73274 73283 73292 73319 73328 73337 73346 73355 73364 73373 73382 73391 73409 73418 73427 73436 73445 73454 73463 73472 73481 73490 73508 73517 73526 73535 73544 73553 73562 73571 73580 73607 73616 73625 73634 73643 73652 73661 73670 73706 73715 73724 73733 73742 73751 73760 73805 73814 73823 73832 73841 73850 73904 73913 73922 73931 73940 74039 74093 74138 74183 74237 74273 74309 74318 74327 74336 74345 74354 74363 74372 74381 74390 74435 74453 74534 74543 74633 74723 74732 74813 74831 74903 74930 75038 75083 75137 75173 75236 75263 75308 75317 75326 75335 75344 75353 75362 75371 75380 75434 75443 75533 75623 75632 75713 75731 75803 75830 76037 76073 76136 76163 76235 76253 76307 76316 76325 76334 76343 76352 76361 76370 76433 76523 76532 76613 76631 76703 76730 77036 77063 77135 77153 77234 77243 77306 77315 77324 77333 77342 77351 77360 77423 77432 77513 77531 77603 77630 78035 78053 78134 78143 78233 78305 78314 78323 78332 78341 78350 78413 78431 78503 78530 79034 79043 79133 79223 79232 79304 79313 79322 79331 79340 79403 79430 80339 80348 80357 80366 80375 80384 80393 80438 80483 80537 80573 80636 80663 80735 80753 80834 80843 80933 81239 81293 81329 81338 81347 81356 81365 81374 81383 81392 81437 81473 81536 81563 81635 81653 81734 81743 81833 81923 81932 82139 82193 82238 82283 82319 82328 82337 82346 82355 82364 82373 82382 82391 82436 82463 82535 82553 82634 82643 82733 82823 82832 82913 82931 83039 83048 83057 83066 83075 83084 83093 83129 83138 83147 83156 83165 83174 83183 83192 83219 83228 83237 83246 83255 83264 83273 83282 83291 83309 83318 83327 83336 83345 83354 83363 83372 83381 83390 83408 83417 83426 83435 83444 83453 83462 83471 83480 83507 83516 83525 83534 83543 83552 83561 83570 83606 83615 83624 83633 83642 83651 83660 83705 83714 83723 83732 83741 83750 83804 83813 83822 83831 83840 83903 83912 83921 83930 84038 84083 84137 84173 84236 84263 84308 84317 84326 84335 84344 84353 84362 84371 84380 84434 84443 84533 84623 84632 84713 84731 84803 84830 85037 85073 85136 85163 85235 85253 85307 85316 85325 85334 85343 85352 85361 85370 85433 85523 85532 85613 85631 85703 85730 86036 86063 86135 86153 86234 86243 86306 86315 86324 86333 86342 86351 86360 86423 86432 86513 86531 86603 86630 87035 87053 87134 87143 87233 87305 87314 87323 87332 87341 87350 87413 87431 87503 87530 88034 88043 88133 88223 88232 88304 88313 88322 88331 88340 88403 88430 89033 89123 89132 89213 89231 89303 89312 89321 89330 90239 90293 90329 90338 90347 90356 90365 90374 90383 90392 90437 90473 90536 90563 90635 90653 90734 90743 90833 90923 90932 91139 91193 91238 91283 91319 91328 91337 91346 91355 91364 91373 91382 91391 91436 91463 91535 91553 91634 91643 91733 91823 91832 91913 91931 92039 92093 92138 92183 92237 92273 92309 92318 92327 92336 92345 92354 92363 92372 92381 92390 92435 92453 92534 92543 92633 92723 92732 92813 92831 92903 92930 93029 93038 93047 93056 93065 93074 93083 93092 93119 93128 93137 93146 93155 93164 93173 93182 93191 93209 93218 93227 93236 93245 93254 93263 93272 93281 93290 93308 93317 93326 93335 93344 93353 93362 93371 93380 93407 93416 93425 93434 93443 93452 93461 93470 93506 93515 93524 93533 93542 93551 93560 93605 93614 93623 93632 93641 93650 93704 93713 93722 93731 93740 93803 93812 93821 93830 93902 93911 93920 94037 94073 94136 94163 94235 94253 94307 94316 94325 94334 94343 94352 94361 94370 94433 94523 94532 94613 94631 94703 94730 95036 95063 95135 95153 95234 95243 95306 95315 95324 95333 95342 95351 95360 95423 95432 95513 95531 95603 95630 96035 96053 96134 96143 96233 96305 96314 96323 96332 96341 96350 96413 96431 96503 96530 97034 97043 97133 97223 97232 97304 97313 97322 97331 97340 97403 97430 98033 98123 98132 98213 98231 98303 98312 98321 98330 99023 99032 99113 99131 99203 99230 99302 99311 99320 "
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "for i in range(100,0,-1):\n",
        "  print(i, end=\" | \")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "qUiApFcE3gGd",
        "outputId": "fd99f3c5-cccb-4c72-a195-762337e4d213"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "100 | 99 | 98 | 97 | 96 | 95 | 94 | 93 | 92 | 91 | 90 | 89 | 88 | 87 | 86 | 85 | 84 | 83 | 82 | 81 | 80 | 79 | 78 | 77 | 76 | 75 | 74 | 73 | 72 | 71 | 70 | 69 | 68 | 67 | 66 | 65 | 64 | 63 | 62 | 61 | 60 | 59 | 58 | 57 | 56 | 55 | 54 | 53 | 52 | 51 | 50 | 49 | 48 | 47 | 46 | 45 | 44 | 43 | 42 | 41 | 40 | 39 | 38 | 37 | 36 | 35 | 34 | 33 | 32 | 31 | 30 | 29 | 28 | 27 | 26 | 25 | 24 | 23 | 22 | 21 | 20 | 19 | 18 | 17 | 16 | 15 | 14 | 13 | 12 | 11 | 10 | 9 | 8 | 7 | 6 | 5 | 4 | 3 | 2 | 1 | "
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "for i in range(100,1001):\n",
        "  isPrime = True\n",
        "\n",
        "  start = 2\n",
        "  while(start < i):\n",
        "    if(i % start == 0):\n",
        "      isPrime = False\n",
        "    start += 1\n",
        "\n",
        "  if(isPrime):\n",
        "    print(i,end=\" | \")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "rj5fGT6t33H0",
        "outputId": "393bc170-4932-465a-9e5f-03b2aca2f064"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "101 | 103 | 107 | 109 | 113 | 127 | 131 | 137 | 139 | 149 | 151 | 157 | 163 | 167 | 173 | 179 | 181 | 191 | 193 | 197 | 199 | 211 | 223 | 227 | 229 | 233 | 239 | 241 | 251 | 257 | 263 | 269 | 271 | 277 | 281 | 283 | 293 | 307 | 311 | 313 | 317 | 331 | 337 | 347 | 349 | 353 | 359 | 367 | 373 | 379 | 383 | 389 | 397 | 401 | 409 | 419 | 421 | 431 | 433 | 439 | 443 | 449 | 457 | 461 | 463 | 467 | 479 | 487 | 491 | 499 | 503 | 509 | 521 | 523 | 541 | 547 | 557 | 563 | 569 | 571 | 577 | 587 | 593 | 599 | 601 | 607 | 613 | 617 | 619 | 631 | 641 | 643 | 647 | 653 | 659 | 661 | 673 | 677 | 683 | 691 | 701 | 709 | 719 | 727 | 733 | 739 | 743 | 751 | 757 | 761 | 769 | 773 | 787 | 797 | 809 | 811 | 821 | 823 | 827 | 829 | 839 | 853 | 857 | 859 | 863 | 877 | 881 | 883 | 887 | 907 | 911 | 919 | 929 | 937 | 941 | 947 | 953 | 967 | 971 | 977 | 983 | 991 | 997 | "
          ]
        }
      ]
    }
  ]
}